package Excercise3;

import java.awt.Color;
import java.awt.Point;
import java.util.Random;

public class Tree{
	

	public Tree() {
			
		
	}
	
	public double grow() {
		
		double newSize = 0;
		
		/* A random number wich cannot be between -1 and 1 (for being able to grow)
		 * only for magic tree.
		 */
		Random mTS = new Random();
		int n = mTS.nextInt(6)-3;
		if(n==0) {
			n = n + 2;
		}else if(n==-1) {
			n = n-1;
		}else if (n==1) {
			n = n+1;
		}
		
		//Depending on what color(tree type), the growth rate is set
		if(getColor() == Color.blue){
			newSize = getSize() * 6;
		}
		if (getColor() == Color.green) {
			newSize = getSize() * 4;
		}
		if (getColor() == Color.orange) {
			newSize = getSize() * 2;
		}
		if (getColor() == Color.cyan) {
			newSize = getSize() * n;
		}
		
		
		return newSize;
	}

	public Color getColor() {
		Color col = null;
		return col;
	}

	public Object getPosition() {
		
		//Using point for coordinates, for easier use
		Point pos = new Point();
		Random p = new Random();
		
		//Positions are generall for all tree types except magic tree, which are in the middle
		if(getColor() == Color.blue || getColor() == Color.green || getColor() == Color.orange){
			pos.x = p.nextInt(1000);
			pos.y = p.nextInt(1000);
		}else if (getColor() == Color.cyan) {
			pos.x = 1000/2;
			pos.y=1000/2;
			
		}
		
		return pos;
			
	}

	public double getSize() {
		double size = 0;
		return size;
	}
	
}
